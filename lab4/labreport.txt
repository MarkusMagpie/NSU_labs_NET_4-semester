Вопросы: 
1 Что такое NAT и зачем он нужен?

2 Какие типы NAT существуют?

3 Как NAT помогает экономить IP-адреса и повышать безопасность сети?

4 Как маршрутизатор определяет, принадлежит ли IP-адрес локальной сети или внешней?



Практика:
1 Добавление поддержки NAT на маршрутизаторе
    Добавьте поддержку определения, принадлежит ли IP-адрес локальной сети или внешней.
    Локальные (приватные) IP-адреса должны заменяться на публичный IP-адрес маршрутизатора при отправке пакетов во внешнюю сеть.
    Публичный IP-адрес должен заменяться на соответствующий локальный IP-адрес при получении ответов из внешней сети.

    чтобы посмотреть какой процесс занимает порт: 
        sudo lsof -i :5000
    если есть процессы - завершить так:
        sudo kill -9 <PID>

    как запускать (тест локальный):
        0 терминал
            nc -u -l 127.0.0.1 5001
        1 терминал
            g++ -o router router.cpp && ./router
        2 теримнал
            echo "PING 0 to 127.0.0.1:5001 from 192.168.1.2 (AA:BB:CC:DD:EE:FF)" | nc -u 127.0.0.1 5000

    логика локального теста:
        клиент ---> NAT роутер ---> сервер (Internet) 

        есть в коде публичный IP роутера: 127.0.0.1
        иммитируя клиента с 127.0.0.1:5000, отправляю пакет с "приватным" IP 192.168.1.2
        сервер netcat слушает на 127.0.0.1:5001
        
        1 клиент отправляет пакет "PING 0 ...": 192.168.1.2:рандомный_порт -> 127.0.0.1:5000
        2 в коде роутера: 
            определяю исходный IP (192.168.1.2) и целевой адрес (127.0.0.1:5001), 
                так как целевой IP 127.0.0.1 - локальный, к нему NAT трансляция не применяется 
                если бы был то он бы был заменен на публичный IP роутера

    логика программы:
        main:
            создаю UDP-сокет, затем привязываю к порту 5000 на всех сетевых устройствах, запускаю главную функцию runRouter()
        runRouter()
            роутер постоянно ожидает UDP-пакеты. Каждый полученный передаётся в handlePacket() для обработки в отдельном (фоновом) потоке.
            один из параметров handlePocket() - полученный от клиента через сокет буфер
        handlePacket()
            1 извлечение информации о клиенте. Из пакета извлекается MAC-адрес клиента, а IP клиента - из адреса отправителя
            2 обновление таблицы клиентов
                клиент добавляется/обновляется в таблице clients с текущим временем активности. Таблица для маршрутизации.
            3 парсинг входнного клиентского сообщения
                из сообщения извлекается полный адрес назначения (127.0.0.1:5001). 
                разделяю на IP 127.0.0.1 и порт 5001
            4 NAT трансляция для исходящих пакетов.
                пример сообщения: PING 0 to 8.8.8.8 from 192.168.1.2 (AA:BB:CC:DD:EE:FF)
                192.168.1.2 - приватный IP клиента - из диапозона приватных IP адресов
                8.8.8.8 - публичный IP Google DNS - не принадлежит локальной машине и не доступен(?) для тестирования
                127.0.0.1 - IP указывает на сам localhost
                    в моем коде 127.0.0.1 иммитирует публичный IP адрес

                если целевой IP ВНЕШНИЙ (8.8.8.8), то исходный ПРИВАТНЫЙ IP клиента (например 192.168.1.2) 
                    заменяется на публичный IP маршрутизатора (константа = 127.0.0.1). 
                Запись сохраняется в NAT-таблицу для обратного преобразования
                
                визуализация ЛОКАЛЬНОГО сообщения:
                    клиент 127.0.0.1:5000 -> роутер -> сервер 127.0.0.1:5001  
            5 поиск целевого клиента
                ищем в таблице клиентов запись с IP, совпадающим с целевым IP (без порта). 
                Если клиент найден, пакет очевидно отправляется ему.
            6 отправка пакета клиенту
                если в 5 пункте нашел целевой IP клиента, отправляю ему message



2 Создание внешнего узла
    Добавьте в сеть один узел, который будет находиться "вне" локальной сети
    Задайте ему IP статически

    как запускать (тест внешний):
        меняем публичный IP: 127.0.0.1 ---> 203.0.113.1
        0 терминал
            sudo ip addr add 203.0.113.10/24 dev lo  
            nc -u -l 203.0.113.10 5001 
        1 терминал
            g++ -o router router.cpp && ./router
        2 терминал 
            echo "PING 0 to 203.0.113.10:5001 from 192.168.1.2 (AA:BB:CC:DD:EE:FF)" | nc -u 203.0.113.1 5000

    логика работы с внешним узлом:
        sudo ip addr add 203.0.113.10/24 dev lo  
            добавляю публичный IP адрес в интерфейс loopback 
            СПРАВКА:  loopback - виртуальный интерфейс для локальных коммуникаций
        echo "PING 0 to 203.0.113.10:5001 from 192.168.1.2 (AA:BB:CC:DD:EE:FF)" | nc -u 203.0.113.1 5000
        клиент ---> NAT роутер ---> цель (в Интернете)
        
        1 клиент отправляет пакет "PING 0 ..." в роутер
        2 роутер выполняет NAT трансляцию:
            замена исходного IP на публичный: 192.168.1.2 -> 203.0.113.1
        3 внешний сервер получает пакет
            203.0.113.1:5000 -> 203.0.113.10:5001



3 Обеспечение взаимодействия узлов
    Убедитесь, что узлы из локальной сети могут обращаться к внешнему узлу через маршрутизатор с использованием NAT.
    Проверьте, что маршрутизатор корректно транслирует адреса и возвращает ответы на запросы из локальной сети.